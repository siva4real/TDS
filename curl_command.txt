======================================================================
CURL COMMAND FOR DEPLOYMENT
======================================================================

Copy and paste this command:

----------------------------------------------------------------------
curl -X POST http://localhost:8000/deploy \
  -H "Content-Type: application/json" \
  -d '{"email": "test@example.com", "secret": "myappsecret123123", "task": "sum-of-sales", "round": 1, "nonce": "test-sales-001", "brief": "Publish a single-page site that fetches data.csv from attachments, sums its sales column, sets the title to \"Sales Summary 12345\", displays the total inside #total-sales, and loads Bootstrap 5 from jsdelivr.", "checks": ["js: document.title === `Sales Summary 12345`", "js: !!document.querySelector(\"link[href*='\''bootstrap'\'']\")", "js: Math.abs(parseFloat(document.querySelector(\"#total-sales\").textContent) - 9201.0) < 0.01"], "evaluation_url": "https://httpbin.org/post", "attachments": [{"name": "data.csv", "url": "data:text/csv;base64,cHJvZHVjdCxzYWxlcwpXaWRnZXQgQSwxMjUwLjUwCldpZGdldCBCLDIzNDAuNzUKV2lkZ2V0IEMsODkwLjI1CldpZGdldCBELDMxMjAuMDAKV2lkZ2V0IEUsMTU5OS41MAo="}]}'
----------------------------------------------------------------------

======================================================================
REQUEST DETAILS
======================================================================
Task: sum-of-sales
Expected Sales Total: $9201.0
CSV Attachment: data.csv (5 products)
Evaluation URL: https://httpbin.org/post

======================================================================
BEFORE RUNNING
======================================================================
1. Make sure the API server is running:
   uvicorn app:app --reload

2. Then run the curl command above

3. Wait 15-30 seconds for deployment

======================================================================
WHAT WILL HAPPEN
======================================================================
1. API receives your request
2. OpenAI generates the sales summary page
3. GitHub repo is created
4. Code is deployed to GitHub Pages
5. Callback is sent to https://httpbin.org/post with:
   - repo_url
   - commit_sha
   - pages_url

======================================================================
ALTERNATIVE: Save to file and run
======================================================================
If the command is too long for your terminal:

1. Save payload to file:
   Copy the JSON below and save as request.json

2. Run:
   curl -X POST http://localhost:8000/deploy \
     -H "Content-Type: application/json" \
     -d @request.json

======================================================================
JSON PAYLOAD (for request.json)
======================================================================
{
  "email": "test@example.com",
  "secret": "myappsecret123123",
  "task": "sum-of-sales",
  "round": 1,
  "nonce": "test-sales-001",
  "brief": "Publish a single-page site that fetches data.csv from attachments, sums its sales column, sets the title to \"Sales Summary 12345\", displays the total inside #total-sales, and loads Bootstrap 5 from jsdelivr.",
  "checks": [
    "js: document.title === `Sales Summary 12345`",
    "js: !!document.querySelector(\"link[href*='bootstrap']\")",
    "js: Math.abs(parseFloat(document.querySelector(\"#total-sales\").textContent) - 9201.0) < 0.01"
  ],
  "evaluation_url": "https://httpbin.org/post",
  "attachments": [
    {
      "name": "data.csv",
      "url": "data:text/csv;base64,cHJvZHVjdCxzYWxlcwpXaWRnZXQgQSwxMjUwLjUwCldpZGdldCBCLDIzNDAuNzUKV2lkZ2V0IEMsODkwLjI1CldpZGdldCBELDMxMjAuMDAKV2lkZ2V0IEUsMTU5OS41MAo="
    }
  ]
}
